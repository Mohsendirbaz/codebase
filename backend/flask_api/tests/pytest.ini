[pytest]
# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test markers
markers =
    integration: mark test as integration test
    slow: mark test as slow running
    unit: mark test as unit test
    api: mark test as API test
    websocket: mark test as WebSocket test
    file: mark test as file operation test
    sensitivity: mark test as sensitivity analysis test
    price: mark test as price analysis test
    efficacy: mark test as efficacy calculation test

# Test execution options
addopts = 
    --strict-markers
    --tb=short
    -v
    --maxfail=2
    --durations=5
    --durations-min=1.0
    --cache-clear

# Environment variables
env =
    FLASK_ENV=testing
    TESTING=true
    FLASK_DEBUG=false

# Coverage configuration
[coverage:run]
branch = True
source = flask_api
omit =
    */tests/*
    */migrations/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:
    if TYPE_CHECKING:

# Coverage HTML report settings
[coverage:html]
directory = reports/coverage
title = Flask API Test Coverage Report

# Coverage XML report settings
[coverage:xml]
output = reports/coverage/coverage.xml

# Flake8 configuration
[flake8]
max-line-length = 100
exclude = .git,__pycache__,build,dist,*.egg-info
ignore = E203,W503

# MyPy configuration
[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True

# Ignore missing imports for certain modules
[mypy-flask_socketio.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-coverage.*]
ignore_missing_imports = True

# Tool-specific configurations
[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    error::RuntimeWarning

# Custom settings
[custom]
slow_test_threshold = 1.0
max_test_duration = 60.0
