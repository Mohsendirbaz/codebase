/* Import base variables and animations */
@import './base.css';
@import './animations.css';

/* Card Container */
.card {
  position: relative;
  background: var(--light-color);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-md);
  overflow: hidden;
  transition: all var(--transition-normal) var(--transition-spring);
  margin: var(--spacing-md);
  will-change: transform, box-shadow;
}

/* Card Header */
.card-header {
  padding: var(--spacing-md) var(--spacing-lg);
  background: linear-gradient(
    to right,
    rgba(var(--primary-color-rgb), 0.05),
    rgba(var(--primary-color-rgb), 0.1)
  );
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  font-weight: 600;
  font-size: var(--font-size-lg);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

/* Card Content */
.card-content {
  padding: var(--spacing-lg);
  background: var(--light-color);
}

/* Interactive States */
.card.interactive {
  cursor: pointer;
  transform: translateZ(0);
  transition: all var(--transition-normal) var(--transition-spring);
}

.card.interactive:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-lg);
}

.card.interactive:active {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

/* Card Variants */
.card.elevated {
  box-shadow: var(--shadow-lg);
}

.card.flat {
  box-shadow: none;
  border: 1px solid rgba(0, 0, 0, 0.1);
}

.card.glass {
  background: rgba(255, 255, 255, 0.8);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* Card Grid Layout */
.card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--spacing-lg);
  padding: var(--spacing-md);
}

/* Card Sections */
.card-section {
  padding: var(--spacing-md);
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.card-section:last-child {
  border-bottom: none;
}

/* Card Actions */
.card-actions {
  display: flex;
  justify-content: flex-end;
  gap: var(--spacing-sm);
  padding: var(--spacing-md) var(--spacing-lg);
  background: rgba(0, 0, 0, 0.02);
}

/* Card Media */
.card-media {
  position: relative;
  overflow: hidden;
}

.card-media img {
  width: 100%;
  height: auto;
  display: block;
  transition: transform var(--transition-normal) ease-out;
}

.card.interactive .card-media img:hover {
  transform: scale(1.05);
}

/* Card Loading State */
.card.loading {
  pointer-events: none;
  opacity: 0.7;
}

.card.loading::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Responsive Adjustments */
@media screen and (max-width: 640px) {
  .card {
    margin: var(--spacing-sm);
  }

  .card-header {
    padding: var(--spacing-sm) var(--spacing-md);
  }

  .card-content {
    padding: var(--spacing-md);
  }

  .card-grid {
    grid-template-columns: 1fr;
  }
}

/* High Contrast Mode Support */
@media (forced-colors: active) {
  .card {
    border: 2px solid CanvasText;
  }

  .card-header {
    border-bottom: 1px solid CanvasText;
  }

  .card-section {
    border-bottom: 1px solid CanvasText;
  }
}

/* Motion Support */
.card.motion-enabled {
  transform-style: preserve-3d;
  perspective: 1000px;
}

.card.motion-enabled.enter {
  animation: cardEnter 500ms var(--transition-spring) forwards;
}

@keyframes cardEnter {
  from {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Print Styles */
@media print {
  .card {
    box-shadow: none !important;
    border: 1px solid #000 !important;
    break-inside: avoid;
  }

  .card-actions {
    display: none;
  }
}
